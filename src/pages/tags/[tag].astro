---
import type { GetStaticPaths } from 'astro';
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Post from '../../components/Post.astro';

interface Props {
  posts: CollectionEntry<'posts'>[];
}

export const getStaticPaths = (async () => {
  const allPosts = (await getCollection('posts')).filter((post) => !post.data.draft);
  const allTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];
  return allTags.map((tag) => {
    const taggedPosts = allPosts
      .filter((post) => post.data.tags.includes(tag))
      .sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());
    return {
      params: { tag },
      props: { posts: taggedPosts },
    };
  });
}) satisfies GetStaticPaths;

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<Layout title="Ken Leung | Math & Programming">
  <h1>Posts tagged with {tag}</h1>
  {
    posts.map((post) => (
      <Post title={post.data.title} slug={post.slug} date={post.data.pubDate} tags={post.data.tags} />
    ))
  }
</Layout>
